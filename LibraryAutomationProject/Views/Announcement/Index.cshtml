@model LibraryAutomation.Entities.Model.Announcement

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}



@Html.Partial("_PartialAnnouncement")



<script src="~/AdminDashboard/admincast-master/html/dist/assets/vendors/jquery/dist/jquery.min.js"></script>
@* Bu kutuphaneyi tarih formatlamak icin dahil ettik. Eger projemizde olmasaydi nuget package'den Moment.js indirecektik(Ya da intten linkini bularak) *@
<script src="~/AdminDashboard/admincast-master/html/dist/assets/vendors/moment/min/moment.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script>
    $(document).ready(function () {
        List();
    });
</script>

<script>
    function List() { // Sayfa yuklendigi zaman
        $.ajax({
            type: 'get',
            url: '@Url.Action("AnnouncementList","Announcement")',
            success: function (data) {

                $('#tbl tbody').html(''); // islemden sonra tbody temizlenecek, daha sonradan tekrar listelemek icin

                $.each(data, function (Index, item) { // dongu yardimiyla duyurulari listeleme
                    // Tarih formatlama islemi
                    var millisecond = parseInt(item.CreatedDate.substr(6));
                    var formattedDate = moment(millisecond).format('DD.MM.YYYY HH:mm:ss');

                    // Duyurulari row row listeleme
                    var row = '<tr> <td><input type="checkbox" class="recordCheckBox" data-id="'+item.Id+'" /></td> <th>' + item.Id +
                        '</th> <td>' + item.Title +
                        '</td> <td>' + item.Content +
                        '</td> <td>' + item.Explanation +
                        '</td> <td>' + formattedDate +
                        '</td> <td>'
                        +'<a href=# class="btnUpdate btn btn-warning btn-sm" data-id="' + item.Id + '" ><i class="fa fa-edit"></i></a> |'
                        + '<a href=/Announcement/Detail/' + item.Id +' class="btn btn-info btn-sm"><i class="fa fa-info"></i></a> |'
                        + '<a href=# data-id=' + item.Id +' class="btnDelete btn btn-danger btn-sm"><i class="fa fa-trash"></i></a> |'
                        +'</td> </tr > ';
                    $('#tbl tbody').append(row); // ilgili satiri id'si tbl olanin tbody'sine ekleme yap

                });
            },
            error: function (error) {
                console.log(error);
            }
        });
    }
</script>

@* Duyuru ekleme islemi *@
<script>
    $(document).ready(function () {
        $('#data-form').submit(function (e) {
            e.preventDefault(); // sayfanin yenilenmesini onlemek icin

            var formData = $(this).serialize();
            $.ajax({
                method: 'post',
                url: '@Url.Action("AnnouncementAdd")',
                data: formData,
                success: function (result) {
                    if (result.success) {
                        List(); // islem basarili ise listeleme islemini tekrar gerceklestir
                        $('#exampleModal').modal('hide'); // islem basarili ise modali kapat
                        alert(result.message); // Controller tarafina return ile dondurdugumuz json icindeki mesaj gosterilecek
                        Clean();
                    }
                    else {
                        // Validasyon hatasi olursa dongu ile hatalari gosterebilme islemi
                        $.each(result.errors, function (key, value) {
                            $('[data-valmsg-for="' + key + '"]').text('');
                            $('[data-valmsg-for="' + key + '"]').text(value[0]);
                        });
                    }
                }
            });
        });
    });
</script>

@* Duyuru guncelleme islemi *@
<script>
    $(document).on('click', '.btnUpdate', function () { // btnUpdate classina sahip butona tiklaninca asagidaki islemler gerceklesecek

        var id = $(this).data('id');
        $('#exampleModalLabel').html(id + ' Nolu Duyuru Güncelleme İşlemi');
        $.ajax({
            url: '/Announcement/AnnouncementGet/',
            type: 'get',
            dataType: 'json',
            data: { Id: id },
            success: function (result) {
                $('#exampleModal').modal('show'); // Basarili oldugunda modal acilsin

                $('#txtId').val(result.Id);
                $('#txtTitle').val(result.Title);
                $('#txtAnnouncement').val(result.Content);
                $('#txtExplanation').val(result.Explanation);

                // Tarih formatlama
                var timestamp = parseInt(result.CreatedDate.replace("/Date(", "").replace(")/", ""));
                var serverDate = new Date(timestamp);
                var correctedDate = new Date(serverDate.getTime() - serverDate.getTimezoneOffset() * 60000);
                var formattedDate = correctedDate.toISOString().slice(0, 16);

                $('#txtDate').val(formattedDate);
            },
            error: function () {
                alert('Bir hata oluştu');
            }
        });
    });
</script>

<script>
    // Ekleme isleminden sonra modaldaki inputlari temizle
    function Clean() {
        $('#data-form').trigger('reset');
        $('#exampleModalLabel').html('Duyuru Ekleme Sayfası');
        $('#txtId').val('0');
    }
</script>

<script>
    function Add() {
        Clean();
    }
</script>

@* Duyurulari anlik olarak silme (ic ice ajax kullanilmistir)*@

<script>
    $(document).on('click', '.btnDelete', function () { // classi btnDelete iceren butona tiklandiginda
        var id = $(this).data('id'); // action'a gelen id'yi cekme istemi
        $.ajax({ // ajax istegi gonderelim
            type: 'get',
            url: '/Announcement/AnnouncementGet/', // Silme islemini gerceklestirirken silinecek kaydin bilgilerini sweetalert ile gosteriyoruz
            data: { Id: id },
            success: function (result) {

                // Tarih formatlama
                var timestamp = parseInt(result.CreatedDate.replace("/Date(", "").replace(")/", ""));
                var serverDate = new Date(timestamp);
                var correctedDate = new Date(serverDate.getTime() - serverDate.getTimezoneOffset() * 60000);
                var formattedDate = correctedDate.toISOString().slice(0, 16);

                Swal.fire({
                    title: 'Kayıt Silme!',
                    html: '<b>Id:</b>' + result.Id + '<br/><b>Başlık:</b>' + result.Title +
                        '<br/><b>Duyuru:</b>' + result.Content + '<br/><b>Açıklama:</b>' + result.Explanation + '<br/><b>Tarih:</b>' + formattedDate,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet!',
                    cancelButtonText: 'Hayır!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'post',
                            url: '/Announcement/AnnouncementDelete/',
                            data: { Id: id },
                            success: function () {
                                List();
                                Clean();

                                Swal.fire('Silindi!',
                                    'Kayıt silme işlemi başarıyla gerçekleşti.',
                                    'success'
                                )
                            },
                            error: function () {
                                alert('Silme işlemi başarısız oldu.');
                            }
                        });
                    }
                });
            },
            error: function () {
                alert('Bir hata oluştu');
            }
        });
    });
</script>

@* En ustteki checkbox'a tikladigimizda tum satirlar secilsin, tekrar basildiginda secimler kaldirilsin *@
<script>
    $(document).on('click', '#tdCheck', function () {
        if ($(this).is(':checked')) { // id'si tdCheck olan eleman seciliyse (en ustteki checkbox) tum kayitlari secili yap
            $('.recordCheckBox').prop('checked', true);
        }
        else {
            $('.recordCheckBox').prop('checked', false); // secili degilse tum elemanlarin secili olma ozelligini kaldir
        }
    });
</script>


@* Checkbox ile secilmis olan kayitlari silecek aja *@
<script>
    // deleteButton id'ye sahip butona basildiginda secili olan tum kayitlari silecek olan kod parcasi
    $(document).on('click', '#deleteButton', function () {
        var selectedIds = [];
        $('.recordCheckBox:checked').each(function () { // .recordCheckBox:checked => secili olan kayitlari dongu icinde tek tek donerek silme islemini gerceklestirecegiz
            selectedIds.push($(this).data('id'));
        });
        if (selectedIds.length > 0) {

            Swal.fire({
                title: 'Kayıt Silme!',
                icon: 'warning',
                html: 'Silinecek Kayıt No(lar): </br>' + selectedIds,
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Evet!',
                cancelButtonText: 'Hayır!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'post',
                        url: '/Announcement/SelectedAnnouncementDelete/',
                        data: { selectedIds: selectedIds }, // data kismi sunucu tarafina parametre olarak gonderilecek verilerdir.
                        success: function () {

                            $('.recordCheckBox:checked').closest('tr').remove(); // islem basarili oldugunda yani kayit silindikten sonra o kaydin yer aldigi tr tagini da siliyoruz. (tr icerisi bos gozukmemesi icin)

                            Swal.fire('Silindi!',
                                'Kayıt silme işlemi başarıyla gerçekleşti.',
                                'success'
                            )
                        },
                        error: function () {
                            alert('Silme işlemi başarısız oldu.');
                        }
                    });
                }
            });
        }
    });
</script>
